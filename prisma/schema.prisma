// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "windows", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//
model User {
  id            Int      @id @default(autoincrement())
  username      String   @unique
  email         String   @unique
  password_hash String
  is_admin      Boolean  @default(false)
  created_at    DateTime @default(now())
  posts         Post[]
}

model PostType {
  id   Int    @id @default(autoincrement())
  name String @unique
  posts Post[]
}

model Post {
  id          Int        @id @default(autoincrement())
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  postType    PostType   @relation(fields: [postTypeId], references: [id])
  postTypeId  Int
  title       String
  content     String
  created_at  DateTime   @default(now())
  start_at    DateTime?
  end_at      DateTime?
  images      PostImage[]
}

model PostImage {
  id       Int    @id @default(autoincrement())
  post     Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId   Int
  image_url String
  is_cover  Boolean @default(false)
}

model FormSubmission {
  id      Int      @id @default(autoincrement())
  nombre  String
  dni     String
  telefono String
  correo  String
  grado   String
  nivel   String  // Puede ser "inicial", "primaria" o "secundaria"
  
  createdAt DateTime @default(now())
}
